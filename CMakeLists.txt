cmake_minimum_required(VERSION 3.0)
project(CmusControl)

set(PROJECT_RELEASE_ID 0)
set(PROJECT_VERSION_MAJOR 0)
set(PROJECT_VERSION_MINOR 1)
set(PROJECT_VERSION_PATCH 0)
set(PROJECT_VERSION_APPENDIX "-dev")
set(PROJECT_COPYRIGHT "Copyright (C) 2015 Christian Mayer <http://fox21.at>")
set(PROJECT_USE_PID_FILE 0)
set(USE_ARC 1)

set(CMAKE_C_FLAGS "-Wall")
set(CMAKE_C_FLAGS_DEBUG "-g -O0 -DDEBUG -Wunused-variable")
set(CMAKE_C_FLAGS_RELEASE "-Os -DNDEBUG -Wno-unused-variable")
set(CMAKE_CXX_FLAGS ${CMAKE_C_FLAGS})
set(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})
set(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)


if(${USE_ARC})
	message(STATUS "USE ARC")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fobjc-arc")
	set(CMAKE_CXX_FLAGS ${CMAKE_C_FLAGS})
else()
	message(STATUS "NO ARC")
endif()

configure_file("${PROJECT_SOURCE_DIR}/src/config.h.in" "${PROJECT_BINARY_DIR}/src/config.h" NEWLINE_STYLE LF)

file(GLOB_RECURSE PROJECT_SOURCES "src/*.m")

set(PROJECT_INCLUDE_DIRS "")
foreach(_srcFile ${PROJECT_SOURCES})
	get_filename_component(_dir ${_srcFile} PATH)
	list(APPEND PROJECT_INCLUDE_DIRS ${_dir})
endforeach()
list(REMOVE_DUPLICATES PROJECT_INCLUDE_DIRS)

include_directories(${PROJECT_INCLUDE_DIRS})
include_directories("${PROJECT_BINARY_DIR}/src")

FIND_LIBRARY(FOUNDATION_LIBRARY Foundation)
FIND_LIBRARY(APPKIT_LIBRARY AppKit)

add_executable(cmuscontrold
	src/main.m
	src/classes/CCApplication.m
	)
target_link_libraries(cmuscontrold ${FOUNDATION_LIBRARY})
target_link_libraries(cmuscontrold ${APPKIT_LIBRARY})

if(${CMAKE_BUILD_TYPE} STREQUAL "Release")
	add_custom_command(TARGET cmuscontrold POST_BUILD COMMAND strip ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/cmuscontrold)
endif()


MESSAGE("")

MESSAGE(STATUS "CMAKE Version: ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_PATCH_VERSION}")
MESSAGE(STATUS "CMAKE bin: ${CMAKE_COMMAND}")
MESSAGE(STATUS "Compiler: ${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER}")
MESSAGE(STATUS "PROJECT_SOURCE_DIR: '${PROJECT_SOURCE_DIR}'")
MESSAGE(STATUS "PROJECT_BINARY_DIR: '${PROJECT_BINARY_DIR}'")
MESSAGE(STATUS "PROJECT_INCLUDE_DIRS: '${PROJECT_INCLUDE_DIRS}'")
MESSAGE("")

# MESSAGE(STATUS "CMAKE_CXX_FLAGS: '${CMAKE_CXX_FLAGS}'")
# MESSAGE(STATUS "CMAKE_CXX_FLAGS_DEBUG: '${CMAKE_CXX_FLAGS_DEBUG}'")
# MESSAGE(STATUS "CMAKE_CXX_FLAGS_RELEASE: '${CMAKE_CXX_FLAGS_RELEASE}'")
# MESSAGE(STATUS "CMAKE_CXX_LINK_FLAGS: '${CMAKE_CXX_LINK_FLAGS}'")
# MESSAGE("")

# MESSAGE(STATUS "CMAKE_BINARY_DIR: '${CMAKE_BINARY_DIR}'")
# MESSAGE(STATUS "CMAKE_BUILD_TYPE: '${CMAKE_BUILD_TYPE}'")
# MESSAGE(STATUS "CMAKE_RUNTIME_OUTPUT_DIRECTORY: '${CMAKE_RUNTIME_OUTPUT_DIRECTORY}'")
# MESSAGE(STATUS "LIBRARY_OUTPUT_PATH: '${LIBRARY_OUTPUT_PATH}'")
# MESSAGE(STATUS "RUNTIME_OUTPUT_DIRECTORY: '${RUNTIME_OUTPUT_DIRECTORY}'")
# MESSAGE(STATUS "CMAKE_SYSTEM_FRAMEWORK_PATH: '${CMAKE_SYSTEM_FRAMEWORK_PATH}'")
# MESSAGE(STATUS "CMAKE_SYSTEM_APPBUNDLE_PATH: '${CMAKE_SYSTEM_APPBUNDLE_PATH}'")
# MESSAGE(STATUS "CMAKE_OSX_SYSROOT: '${CMAKE_OSX_SYSROOT}'")
# MESSAGE("")

# MESSAGE(STATUS "FOUNDATION_LIBRARY: '${FOUNDATION_LIBRARY}'")
# MESSAGE(STATUS "APPKIT_LIBRARY:     '${APPKIT_LIBRARY}'")
# MESSAGE("")
